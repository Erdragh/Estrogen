plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Create
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
        // Create Dependencies
    // Forge-config-api-port
    maven {
        name = "CurseForge"
        url = "https://cursemaven.com"
    }
    // Reach Entity Attributes
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content { includeGroup("com.jamieswhiteshirt") }
    }
    // Mixin extras, Porting Lib, Fabric ASM
    maven {
        name = "Jitpack"
        url = "https://jitpack.io/"
    }
    // Flywheel
    maven {
        name = "Tterraq"
        url = "https://maven.tterrag.com/"
    }
    // Lazy DFU
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    // Milk Lib
    maven {
        name = "Milk Lib"
        url = "https://mvn.devos.one/snapshots/"
    }

    // ModMenu
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    // Ears
    maven {
        name = "unascribed"
        url = "https://repo.unascribed.com"
        content { includeGroup "com.unascribed" }
    }
    // DevAuth
    maven {
        name = "DjTheRedstoner"
        url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
    }
    // OwO Lib
    maven {
        name = "WispForest"
        url = "https://maven.wispforest.io"
    }
    // REI
    maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me"
    }

}

dependencies {
    // Base
    minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings ("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // Create
    modImplementation ("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}+mc${project.minecraft_version}")

    // Integrations
    modCompileOnly ("com.unascribed:ears-api:${project.ears_version}")

    // Config
    modImplementation ("io.wispforest:owo-lib:${project.owo_version}")
    annotationProcessor ("io.wispforest:owo-lib:${project.owo_version}")
    modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}")

    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
        modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")

    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devauth_version}")

}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
